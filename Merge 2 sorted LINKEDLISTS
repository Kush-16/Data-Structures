# MERGE TWO SORTED SINGLY LINKED LISTS 1-3-5,,,, 2-4-6 gives 1-2-3-4-5-6

    def merge_sorted(self, llist):
        p = self.head #..self is the linked list 1
        q = llist.head # llist is the second list which is to be merged to first list.. in a sorted order

        #checking if either of the link list is empty
        if not p:
            return q
        if not q:
            return p
        # creating a temp variable which will help us swap values if either of the node is greater or lesser
        temp = None
        if p and q: #checking if p and q are not empty
            if p.data <= q.data: # if p < q then.. the temp node acquires p, p points to the next node
                temp = p
                p = temp.next
            else: #this is the else condition of above if statement
                temp = q
                q = q.next
            new_head = temp
         #after getting temp to its place....we need to sort the LL
        while p and q:
            if p and q:
                # if p's value >> q's value... we point the temp to q as it is smaller among p and q,
                # so the temp(which has the first value (& the smallest value) of node will point to second smallest node
                # which in this case is q's first value
                if p.data >= q.data:
                    temp.next = q
                    temp = q
                    q = temp.next
                else: #here the opposite of what is written above will happen
                    temp.next = p
                    temp = p
                    p = temp.next
        if p is None: #here we are checking if we have reached to the end of any one of the LL..
            #if we reached the end of p, then we will point the temp..which is behind p.. to q
            temp.next = q
        if q is None: #else we point temp to p
            temp.next = p
        return new_head





# creating object to call class
llist_1 = LinkedList()
llist_2 = LinkedList()

llist_1.append(1)
llist_1.append(5)
llist_1.append(7)
llist_1.append(9)
llist_1.append(10)

llist_2.append(2)
llist_2.append(3)
llist_2.append(4)
llist_2.append(6)
llist_2.append(8)

llist_1.merge_sorted(llist_2)
llist_1.printlist()
